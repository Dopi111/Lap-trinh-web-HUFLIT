@model Login.Models.UserRegister

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>

    <script type="text/javascript">
        setTimeout(function () {
            window.location.href = '@Url.Action("Login", "Account")';
        }, 2000);
    </script> 
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserRegister</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "password" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                <button type="button" onclick="togglePasswordVisibility('password', this)" class="btn btn-secondary">Show</button>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Click here to login", "Login")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function togglePasswordVisibility(passwordFieldId, button) {
            const passwordField = document.getElementById(passwordFieldId);
            if (passwordField.type === "password") {
                passwordField.type = "text";
                button.innerText = "Hide";
            } else {
                passwordField.type = "password";
                button.innerText = "Show";
            }
        }
    </script>
}